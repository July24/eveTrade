<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eve.dao.ItemsMapper">
  <resultMap id="BaseResultMap" type="com.eve.entity.database.Items">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="basePrice" jdbcType="DOUBLE" property="baseprice" />
    <result column="graphicID" jdbcType="INTEGER" property="graphicid" />
    <result column="groupID" jdbcType="INTEGER" property="groupid" />
    <result column="iconID" jdbcType="INTEGER" property="iconid" />
    <result column="marketGroupID" jdbcType="INTEGER" property="marketgroupid" />
    <result column="metaGroupID" jdbcType="INTEGER" property="metagroupid" />
    <result column="cn_name" jdbcType="VARCHAR" property="cnName" />
    <result column="en_name" jdbcType="VARCHAR" property="enName" />
    <result column="volume" jdbcType="DOUBLE" property="volume" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, basePrice, graphicID, groupID, iconID, marketGroupID, metaGroupID, cn_name, en_name, 
    volume
  </sql>
  <select id="selectByExample" parameterType="com.eve.entity.database.ItemsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from items
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from items
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.eve.entity.database.ItemsExample">
    delete from items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.eve.entity.database.Items">
    insert into items (id, basePrice, graphicID, 
      groupID, iconID, marketGroupID, 
      metaGroupID, cn_name, en_name, 
      volume)
    values (#{id,jdbcType=INTEGER}, #{baseprice,jdbcType=DOUBLE}, #{graphicid,jdbcType=INTEGER}, 
      #{groupid,jdbcType=INTEGER}, #{iconid,jdbcType=INTEGER}, #{marketgroupid,jdbcType=INTEGER}, 
      #{metagroupid,jdbcType=INTEGER}, #{cnName,jdbcType=VARCHAR}, #{enName,jdbcType=VARCHAR}, 
      #{volume,jdbcType=DOUBLE})
  </insert>
  <insert id="insertSelective" parameterType="com.eve.entity.database.Items">
    insert into items
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="baseprice != null">
        basePrice,
      </if>
      <if test="graphicid != null">
        graphicID,
      </if>
      <if test="groupid != null">
        groupID,
      </if>
      <if test="iconid != null">
        iconID,
      </if>
      <if test="marketgroupid != null">
        marketGroupID,
      </if>
      <if test="metagroupid != null">
        metaGroupID,
      </if>
      <if test="cnName != null">
        cn_name,
      </if>
      <if test="enName != null">
        en_name,
      </if>
      <if test="volume != null">
        volume,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="baseprice != null">
        #{baseprice,jdbcType=DOUBLE},
      </if>
      <if test="graphicid != null">
        #{graphicid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null">
        #{groupid,jdbcType=INTEGER},
      </if>
      <if test="iconid != null">
        #{iconid,jdbcType=INTEGER},
      </if>
      <if test="marketgroupid != null">
        #{marketgroupid,jdbcType=INTEGER},
      </if>
      <if test="metagroupid != null">
        #{metagroupid,jdbcType=INTEGER},
      </if>
      <if test="cnName != null">
        #{cnName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null">
        #{enName,jdbcType=VARCHAR},
      </if>
      <if test="volume != null">
        #{volume,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.eve.entity.database.ItemsExample" resultType="java.lang.Long">
    select count(*) from items
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update items
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.baseprice != null">
        basePrice = #{record.baseprice,jdbcType=DOUBLE},
      </if>
      <if test="record.graphicid != null">
        graphicID = #{record.graphicid,jdbcType=INTEGER},
      </if>
      <if test="record.groupid != null">
        groupID = #{record.groupid,jdbcType=INTEGER},
      </if>
      <if test="record.iconid != null">
        iconID = #{record.iconid,jdbcType=INTEGER},
      </if>
      <if test="record.marketgroupid != null">
        marketGroupID = #{record.marketgroupid,jdbcType=INTEGER},
      </if>
      <if test="record.metagroupid != null">
        metaGroupID = #{record.metagroupid,jdbcType=INTEGER},
      </if>
      <if test="record.cnName != null">
        cn_name = #{record.cnName,jdbcType=VARCHAR},
      </if>
      <if test="record.enName != null">
        en_name = #{record.enName,jdbcType=VARCHAR},
      </if>
      <if test="record.volume != null">
        volume = #{record.volume,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update items
    set id = #{record.id,jdbcType=INTEGER},
      basePrice = #{record.baseprice,jdbcType=DOUBLE},
      graphicID = #{record.graphicid,jdbcType=INTEGER},
      groupID = #{record.groupid,jdbcType=INTEGER},
      iconID = #{record.iconid,jdbcType=INTEGER},
      marketGroupID = #{record.marketgroupid,jdbcType=INTEGER},
      metaGroupID = #{record.metagroupid,jdbcType=INTEGER},
      cn_name = #{record.cnName,jdbcType=VARCHAR},
      en_name = #{record.enName,jdbcType=VARCHAR},
      volume = #{record.volume,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.eve.entity.database.Items">
    update items
    <set>
      <if test="baseprice != null">
        basePrice = #{baseprice,jdbcType=DOUBLE},
      </if>
      <if test="graphicid != null">
        graphicID = #{graphicid,jdbcType=INTEGER},
      </if>
      <if test="groupid != null">
        groupID = #{groupid,jdbcType=INTEGER},
      </if>
      <if test="iconid != null">
        iconID = #{iconid,jdbcType=INTEGER},
      </if>
      <if test="marketgroupid != null">
        marketGroupID = #{marketgroupid,jdbcType=INTEGER},
      </if>
      <if test="metagroupid != null">
        metaGroupID = #{metagroupid,jdbcType=INTEGER},
      </if>
      <if test="cnName != null">
        cn_name = #{cnName,jdbcType=VARCHAR},
      </if>
      <if test="enName != null">
        en_name = #{enName,jdbcType=VARCHAR},
      </if>
      <if test="volume != null">
        volume = #{volume,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.eve.entity.database.Items">
    update items
    set basePrice = #{baseprice,jdbcType=DOUBLE},
      graphicID = #{graphicid,jdbcType=INTEGER},
      groupID = #{groupid,jdbcType=INTEGER},
      iconID = #{iconid,jdbcType=INTEGER},
      marketGroupID = #{marketgroupid,jdbcType=INTEGER},
      metaGroupID = #{metagroupid,jdbcType=INTEGER},
      cn_name = #{cnName,jdbcType=VARCHAR},
      en_name = #{enName,jdbcType=VARCHAR},
      volume = #{volume,jdbcType=DOUBLE}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>